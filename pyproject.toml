[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "pytorch_gum_uncertainty_propagation"
description = """
This package accompanies my Master's thesis on GUM-compliant uncertainty propagation\
and provides an implementation for fully-connected, feed-forward, deep neural networks\
using PyTorch.\
"""
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "uncertainty propagation",
    "GUM",
    "neural networks",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
version = "0.13.0"
dependencies = [
    "h5py",
    "matplotlib",
    "pillow",
    "pooch",
    "torch",
    "torchvision",
    "torchaudio",
    "tqdm",
]
[license]
text = "MIT"
file = "LICENSE"

[project.optional-dependencies]
examples = [
    "ipywidgets",
    "jupyter_nbextensions_configurator",
    "notebook",
]
dev = [
    "black[jupyter]",
    "flake8",
    "Flake8-pyproject",
    "hypothesis[numpy]",
    "mypy",
    "pylint",
    "pytest",
    "pytest-cov",
    "pytest-custom-exit-code",
]
docs = [
    "ipython",
    "nbsphinx",
    "myst-parser",
    "sphinx",
    "sphinx-rtd-theme",
]
release = [
    "python-semantic-release",
]

[tool.setuptools]
license-files = ["LICENSE"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--strict-markers --suppress-no-test-exit-code --color=yes"
filterwarnings = "error"
markers = "webtest: mark a test as requiring internet connecttion"

[tool.mypy]
exclude = ["^build/", "^venv/"]
scripts_are_modules = true
warn_unused_ignores = true
show_error_codes = true
enable_error_code = "ignore-without-code"
strict = true

[[tool.mypy.overrides]]
module = ["setuptools.*", "h5py.*", "pooch.*"]
ignore_missing_imports = true

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:project.version"
version_variable = "docs/conf.py:version"
major_on_zero = false
changelog_sections = "feature,fix,breaking,documentation,performance"
changelog_components = "semantic_release.changelog.changelog_headers,semantic_release.changelog.compare_url"
upload_to_repository = false
upload_to_release = true
hvcs = "gitlab"
hvcs_domain = "gitlab1.ptb.de"
commit_author= "Bjoern Ludwig <bjoern.ludwig@ptb.de>"

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = "venv"

[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 88

[tool.pylint.typecheck]
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members = "torch.*"
